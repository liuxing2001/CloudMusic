package com.jhp.cloudmusic.data.model

data class DjProgram(
    val category: Int,
    val code: Int,
    val result: List<Result>
)
{
    data class Result(
        val alg: String,
        val canDislike: Boolean,
        val copywriter: String,
        val id: String,
        val name: String,
        val picUrl: String,
        val program: Program,
        val trackNumberUpdateTime: Any,
        val type: Int
    )

    data class Program(
        val adjustedPlayCount: Int,
        val auditStatus: Int,
        val bdAuditStatus: Int,
        val blurCoverUrl: String,
        val buyed: Boolean,
        val canReward: Boolean,
        val channels: List<String>,
        val commentCount: Int,
        val commentThreadId: String,
        val coverId: Long,
        val coverUrl: String,
        val createTime: Long,
        val description: String,
        val dj: DjX,
        val duration: Int,
        val h5Links: List<Any>,
        val id: Long,
        val isPublish: Boolean,
        val likedCount: Int,
        val listenerCount: Int,
        val mainSong: MainSong,
        val mainTrackId: Int,
        val name: String,
        val programDesc: Any,
        val programFeeType: Int,
        val pubStatus: Int,
        val publish: Boolean,
        val radio: Radio,
        val reward: Boolean,
        val serialNum: Int,
        val shareCount: Int,
        val songs: Any,
        val subscribed: Boolean,
        val subscribedCount: Int,
        val titbitImages: Any,
        val titbits: Any,
        val trackCount: Int,
        val userId: Long
    )

    data class DjX(
        val accountStatus: Int,
        val anchor: Boolean,
        val authStatus: Int,
        val authenticationTypes: Int,
        val authority: Int,
        val avatarDetail: Any,
        val avatarImgId: Long,
        val avatarImgIdStr: String,
        val avatarImgId_str: String,
        val avatarUrl: String,
        val backgroundImgId: Long,
        val backgroundImgIdStr: String,
        val backgroundUrl: String,
        val birthday: Long,
        val brand: String,
        val city: Int,
        val defaultAvatar: Boolean,
        val description: String,
        val detailDescription: String,
        val djStatus: Int,
        val expertTags: Any,
        val experts: Any,
        val followed: Boolean,
        val gender: Int,
        val mutual: Boolean,
        val nickname: String,
        val province: Int,
        val remarkName: Any,
        val signature: String,
        val userId: Long,
        val userType: Int,
        val vipType: Int
    )

    data class MainSong(
        val album: Album,
        val alias: List<Any>,
        val artists: List<ArtistXX>,
        val audition: Any,
        val bMusic: BMusic,
        val commentThreadId: String,
        val copyFrom: String,
        val copyright: Int,
        val copyrightId: Int,
        val crbt: Any,
        val dayPlays: Int,
        val disc: String,
        val duration: Int,
        val fee: Int,
        val ftype: Int,
        val hMusic: HMusic,
        val hearTime: Int,
        val hrMusic: Any,
        val id: Int,
        val lMusic: LMusic,
        val mMusic: Any,
        val mark: Int,
        val mp3Url: Any,
        val mvid: Int,
        val name: String,
        val no: Int,
        val noCopyrightRcmd: Any,
        val originCoverType: Int,
        val originSongSimpleData: Any,
        val playedNum: Int,
        val popularity: Int,
        val position: Int,
        val ringtone: String,
        val rtUrl: Any,
        val rtUrls: List<Any>,
        val rtype: Int,
        val rurl: Any,
        val score: Int,
        val sign: Any,
        val single: Int,
        val sqMusic: Any,
        val starred: Boolean,
        val starredNum: Int,
        val status: Int,
        val transName: Any
    )

    data class Radio(
        val buyed: Boolean,
        val category: String,
        val categoryId: Int,
        val composeVideo: Boolean,
        val createTime: Long,
        val desc: String,
        val discountPrice: Any,
        val dj: Any,
        val feeScope: Int,
        val finished: Boolean,
        val hightQuality: Boolean,
        val id: Int,
        val lastProgramCreateTime: Long,
        val lastProgramId: Long,
        val lastProgramName: Any,
        val name: String,
        val originalPrice: Int,
        val picId: Long,
        val picUrl: String,
        val price: Int,
        val programCount: Int,
        val purchaseCount: Int,
        val radioFeeType: Int,
        val rcmdText: String,
        val subCount: Int,
        val subed: Boolean,
        val underShelf: Boolean,
        val videos: Any,
        val whiteList: Boolean
    )

    data class Album(
        val alias: List<Any>,
        val artist: Artist,
        val artists: List<ArtistX>,
        val blurPicUrl: String,
        val briefDesc: String,
        val commentThreadId: String,
        val company: Any,
        val companyId: Int,
        val copyrightId: Int,
        val description: String,
        val gapless: Int,
        val id: Int,
        val mark: Int,
        val name: String,
        val onSale: Boolean,
        val pic: Long,
        val picId: Long,
        val picId_str: String,
        val picUrl: String,
        val publishTime: Int,
        val size: Int,
        val songs: List<Any>,
        val status: Int,
        val subType: Any,
        val tags: String,
        val transName: Any,
        val type: Any
    )

    data class ArtistXX(
        val albumSize: Int,
        val alias: List<Any>,
        val briefDesc: String,
        val id: Int,
        val img1v1Id: Int,
        val img1v1Url: String,
        val musicSize: Int,
        val name: String,
        val picId: Int,
        val picUrl: String,
        val topicPerson: Int,
        val trans: String
    )

    data class BMusic(
        val bitrate: Int,
        val dfsId: Int,
        val extension: String,
        val id: Long,
        val name: Any,
        val playTime: Int,
        val size: Int,
        val sr: Int,
        val volumeDelta: Int
    )

    data class HMusic(
        val bitrate: Int,
        val dfsId: Int,
        val extension: String,
        val id: Long,
        val name: Any,
        val playTime: Int,
        val size: Int,
        val sr: Int,
        val volumeDelta: Int
    )

    data class LMusic(
        val bitrate: Int,
        val dfsId: Int,
        val extension: String,
        val id: Long,
        val name: Any,
        val playTime: Int,
        val size: Int,
        val sr: Int,
        val volumeDelta: Int
    )

    data class Artist(
        val albumSize: Int,
        val alias: List<Any>,
        val briefDesc: String,
        val id: Int,
        val img1v1Id: Int,
        val img1v1Url: String,
        val musicSize: Int,
        val name: String,
        val picId: Int,
        val picUrl: String,
        val topicPerson: Int,
        val trans: String
    )

    data class ArtistX(
        val albumSize: Int,
        val alias: List<Any>,
        val briefDesc: String,
        val id: Int,
        val img1v1Id: Int,
        val img1v1Url: String,
        val musicSize: Int,
        val name: String,
        val picId: Int,
        val picUrl: String,
        val topicPerson: Int,
        val trans: String
    )
}
